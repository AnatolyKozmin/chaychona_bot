"""Initial revision

Revision ID: d2ecba4c5cc6
Revises: 
Create Date: 2025-07-17 19:36:02.389277

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects.postgresql import JSONB

# revision identifiers, used by Alembic.
revision: str = 'd2ecba4c5cc6'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # Установка необходимых расширений PostgreSQL
    op.execute("CREATE EXTENSION IF NOT EXISTS btree_gin")
    
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('restaurants',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), server_default='true', nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_restaurants_title'), 'restaurants', ['title'], unique=True)
    
    op.create_table('dishes',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('cooking_time', sa.Integer(), nullable=True),
    sa.Column('is_available', sa.Boolean(), server_default='true', nullable=False),
    # ИСПРАВЛЕНО: Используем JSONB вместо JSON
    sa.Column('ingredients', JSONB(), nullable=False, comment="Список ингредиентов в формате [{'name':str, 'amount':float, 'unit':str}]"),
    sa.Column('dish_photo_id', sa.String(length=255), nullable=False),
    sa.Column('ingredients_photo_id', sa.String(length=255), nullable=True),
    sa.Column('audio_guide_id', sa.String(length=255), nullable=True),
    sa.Column('video_guide_id', sa.String(length=255), nullable=True),
    sa.Column('restaurant_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['restaurant_id'], ['restaurants.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ИСПРАВЛЕНО: Правильное создание GIN индекса для JSONB
    op.create_index(
        'ix_dish_ingredients', 
        'dishes', 
        [sa.text("ingredients jsonb_path_ops")], 
        unique=False, 
        postgresql_using='gin'
    )
    op.create_index(op.f('ix_dishes_name'), 'dishes', ['name'], unique=False)
    op.create_index(op.f('ix_dishes_restaurant_id'), 'dishes', ['restaurant_id'], unique=False)
    
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('tg_id', sa.BigInteger(), nullable=False),
    sa.Column('tg_username', sa.String(length=50), nullable=True),
    sa.Column('full_name', sa.String(length=100), nullable=False),
    sa.Column('is_waiter', sa.Boolean(), server_default='false', nullable=False),
    sa.Column('is_admin', sa.Boolean(), server_default='false', nullable=False),
    sa.Column('restaurant_id', sa.Integer(), nullable=True),
    sa.Column('total_training_time', sa.Integer(), server_default='0', nullable=False),
    sa.Column('last_trained_dish', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_active', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['last_trained_dish'], ['dishes.id'], ),
    sa.ForeignKeyConstraint(['restaurant_id'], ['restaurants.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_restaurant_id'), 'users', ['restaurant_id'], unique=False)
    op.create_index(op.f('ix_users_tg_id'), 'users', ['tg_id'], unique=True)
    
    op.create_table('questions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('dish_id', sa.Integer(), nullable=False),
    sa.Column('question_text', sa.Text(), nullable=False),
    sa.Column('options', JSONB(), nullable=False),  # Используем JSONB
    sa.Column('correct_answer', sa.Integer(), nullable=False),
    sa.Column('difficulty', sa.Integer(), server_default='1', nullable=False),
    sa.ForeignKeyConstraint(['dish_id'], ['dishes.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_questions_dish_id'), 'questions', ['dish_id'], unique=False)
    
    op.create_table('training_sessions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('dish_id', sa.Integer(), nullable=True),
    sa.Column('start_time', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.Column('details', JSONB(), nullable=True),  # Используем JSONB
    sa.ForeignKeyConstraint(['dish_id'], ['dishes.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_training_sessions_dish_id'), 'training_sessions', ['dish_id'], unique=False)
    op.create_index(op.f('ix_training_sessions_user_id'), 'training_sessions', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_training_sessions_user_id'), table_name='training_sessions')
    op.drop_index(op.f('ix_training_sessions_dish_id'), table_name='training_sessions')
    op.drop_table('training_sessions')
    op.drop_index(op.f('ix_questions_dish_id'), table_name='questions')
    op.drop_table('questions')
    op.drop_index(op.f('ix_users_tg_id'), table_name='users')
    op.drop_index(op.f('ix_users_restaurant_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_dishes_restaurant_id'), table_name='dishes')
    op.drop_index(op.f('ix_dishes_name'), table_name='dishes')
    op.drop_index('ix_dish_ingredients', table_name='dishes', postgresql_using='gin')
    op.drop_table('dishes')
    op.drop_index(op.f('ix_restaurants_title'), table_name='restaurants')
    op.drop_table('restaurants')
    # ### end Alembic commands ###
    
    # Удаление расширений при откате
    op.execute("DROP EXTENSION IF EXISTS btree_gin")